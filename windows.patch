diff --git a/config/main.el b/config/main.el
index dfcd73e..c8b180e 100644
--- a/config/main.el
+++ b/config/main.el
@@ -12,9 +12,9 @@
 (use-package rainbow-blocks
   :ensure t
   :config (rainbow-blocks-mode 1))
-(use-package blimp :ensure t
-  :config
-  (add-hook 'image-minor-mode-hook 'blimp-mode))
+;; (use-package blimp :ensure t
+;;   :config
+;;   (add-hook 'image-minor-mode-hook 'blimp-mode))
 (use-package gnuplot :ensure t)
 (use-package restclient
   :ensure t
@@ -52,7 +52,7 @@
 (setq select-enable-clipboard t)
 (setq x-select-enable-clipboard-manager t)
 
-;; (setq ring-bell-function 'ignore)
+(setq ring-bell-function 'ignore)
 
 ;; alias yes-or-no-p function to y-or-n-p function
 (defalias 'yes-or-no-p 'y-or-n-p)
@@ -210,9 +210,9 @@
 ;;;;                                      fzf 
 ;; set before requiring so as to trigger warning message when loaded and these
 ;; settings don't make sense
-(setq fzf/executable "fzf")
-(setq fzf/wsl nil)                      ;set wsl flag
-(setq fzf/args "-x --prompt='? ' --print-query --query='!^bin !^obj '")
+(setq fzf/executable "fzf.exe")
+(setq fzf/wsl t)                      ;set wsl flag
+(setq fzf/args "-x --prompt='? ' --query='!^bin !^obj '")
 
 ;; forked implementation of fzf
 (require 'fzf)
@@ -269,8 +269,8 @@
 ;; cycle through completions with TAB
 (setq eshell-cmpl-cycle-completions t)
 
-(require 'eshell-ring)
-(global-eshring-mode 1)
+;; (require 'eshell-ring)
+;; (global-eshring-mode 1)
 
 ;; *SLOW* This adds about 3 seconds to startup because of all the shell commands. Maybe we should
 ;; cache? From https://www.emacswiki.org/emacs/EshellCompletion. Fixes eshell's noncompletion of
diff --git a/config/visual.el b/config/visual.el
index fda6a92..089395d 100644
--- a/config/visual.el
+++ b/config/visual.el
@@ -36,11 +36,11 @@
 
 ;; default window dimensions 130x150 and 200 pixels down. X unspecified. This
 ;; works for emacsclient as well
-(when (display-graphic-p)
+;; (when (display-graphic-p)
   (setq default-frame-alist
-        '((width . 130)
-          (height . 150)
-          (top . 200))))
+        '((width . 120)
+          (height . 100)
+          (top . 100)))
 
 (require 'org)
 ;; terminus doens't have italics or bold
diff --git a/init.el b/init.el
index 64a8d9a..885ffbb 100644
--- a/init.el
+++ b/init.el
@@ -8,11 +8,11 @@
 (package-initialize)
 
 (setq package-archives '(("gnu" . "https://elpa.gnu.org/packages/")
-			 ("melpa" . "https://melpa.org/packages/")
-			 ("melpa-stable" . "https://stable.melpa.org/packages/")
-			 ;; ("org" . "http://orgmode.org/elpa/")
+                         ("melpa" . "https://melpa.org/packages/")
+                         ("melpa-stable" . "https://stable.melpa.org/packages/")
+                         ;; ("org" . "http://orgmode.org/elpa/")
 ;;			 ("marmalade" . "http://marmalade-repo.org/packages/")
-			 ))
+                         ))
 
 
 ;;;; ===========================================================================
@@ -32,8 +32,8 @@
 (require 'package)
 (require 'seq)
 (let* ((packages '(use-package
-		    helm
-		    spacemacs-theme
+                    helm
+                    spacemacs-theme
                     ;; from https://emacs-lsp.github.io/lsp-mode/tutorials/CPP-guide/
                     ;; figure out what you really want to keep later
                     lsp-mode
@@ -48,20 +48,22 @@
                     which-key
                     helm-xref
                     dap-mode
-		    ))
+                    ))
        (notinstalled (seq-filter #'(lambda (pkg) (not (package-installed-p pkg)))
-				 packages)))
+                                 packages)))
   (when notinstalled
     (message "==The following packages will be installed: %s" (format "%S" notinstalled))
-    (package-refresh-contents)
-    (mapc #'package-install notinstalled)))
+    ;(package-refresh-contents)
+    ;(mapc #'package-install notinstalled)
+))
 
+
 ;;;; ===========================================================================
 ;;;;                                   load-path
 
 (add-to-list 'load-path (concat user-emacs-directory "config/"))
 (add-to-list 'load-path (concat user-emacs-directory "config/hacks/"))
-(add-to-list 'load-path (concat user-emacs-directory "eshell-ring/"))
+;; (add-to-list 'load-path (concat user-emacs-directory "eshell-ring/"))
 (add-to-list 'load-path (concat user-emacs-directory "ezkeys/"))
 (add-to-list 'load-path (concat user-emacs-directory "evil-numbers/"))
 (add-to-list 'load-path (concat user-emacs-directory "fzf/"))
@@ -69,6 +71,54 @@
 
 (require 'main)
 
+
+;;;; ===========================================================================
+;;;;                                 windows-patch
+(defun counsel-locate-action-extern (x)
+  "Pass X to `xdg-open' or equivalent command via the shell."
+  (interactive "FFile: ")
+  (if (and (eq system-type 'windows-nt)
+           (fboundp 'w32-shell-execute))
+      (w32-shell-execute "open" x)
+    (message (format "%s %s"
+                     (cl-case system-type
+                       (darwin "open")
+                       (cygwin "cygstart")
+                       (t "~/.emacs.d/win-bins/wsl-open"))
+                     (shell-quote-argument x)))
+    (call-process-shell-command (format "%s %s"
+                                        (cl-case system-type
+                                          (darwin "open")
+                                          (cygwin "cygstart")
+                                          (t "~/.emacs.d/win-bins/wsl-open"))
+                                        (shell-quote-argument x))
+                                nil 0)))
+
+;; temp
+(setq default-frame-alist (append default-frame-alist
+                                  '((inhibit-double-buffering . t))))
+
+
+(defun dired-open-in-vs ()
+  "Opens dired's current file in visual studio"
+  (interactive)
+  (let* ((filename (file-relative-name (dired-get-filename)))
+         (cmd (concat "devenv.exe " filename " /Edit")))
+    (call-process-shell-command cmd nil 0)))
+
+(require 'dired)
+(define-key dired-mode-map (kbd "C-i") #'dired-open-in-vs)
+
+;; without this, opening a file in windows os source (controlled by Git-VFS) is /very/ slow
+(magit-auto-revert-mode -1)
+(setq vc-handled-backends nil)
+(setq find-file-hook
+      (cl-remove-if (lambda (elt) (eq elt 'vc-refresh-state))
+              find-file-hook))
+
+
+;;;; ===========================================================================
+;;;;                                     keymap
 (setq ezk-keymap-path (concat user-emacs-directory "init.el"))
 (require 'ezkeys)
 
